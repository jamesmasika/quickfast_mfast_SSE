// SSE_MarketData_Templates.cpp generated by mFAST from FAST Template. 
// Do not modify this file directly. Any modifications 
// will be lost the next time this file is generated.

#include "SSE_MarketData_Templates.h"

using namespace mfast;

namespace SSE_MarketData_Templates
{
const MDSnapshotFullRefresh_4001::instruction_type*
MDSnapshotFullRefresh_4001::instruction()
{
  const static MDSnapshotFullRefresh_4001::instruction_type* ptr_instruction;
  if (ptr_instruction) return ptr_instruction;
const static ascii_field_instruction
MDSnapshotFullRefresh_4001__MDStreamID_instruction(
  operator_copy,
  presence_mandatory,
  1500, // id
  "MDStreamID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MDSnapshotFullRefresh_4001__SecurityID_instruction(
  operator_tail,
  presence_mandatory,
  48, // id
  "SecurityID", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static byte_vector_field_instruction
MDSnapshotFullRefresh_4001__Symbol_instruction(
  operator_default,
  presence_optional,
  55, // id
  "Symbol", // name
  "", // ns
  nullptr,  // opContext
  byte_vector_value_storage(), // initial value
  0, // length id
  "", // length name
  "", // length ns
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
MDSnapshotFullRefresh_4001__NumTrades_instruction(
  operator_delta,
  presence_optional,
  8503, // id
  "NumTrades", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
MDSnapshotFullRefresh_4001__TradeVolume_instruction(
  operator_delta,
  presence_optional,
  1020, // id
  "TradeVolume", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static decimal_field_instruction
MDSnapshotFullRefresh_4001__TotalValueTraded_instruction(
  operator_delta,
  presence_optional,
  8504, // id
  "TotalValueTraded", // name
  "", // ns
  nullptr,  // opContext
  decimal_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static decimal_field_instruction
MDSnapshotFullRefresh_4001__PrevClosePx_instruction(
  operator_delta,
  presence_optional,
  140, // id
  "PrevClosePx", // name
  "", // ns
  nullptr,  // opContext
  decimal_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static decimal_field_instruction
MDSnapshotFullRefresh_4001__PrevSetPx_instruction(
  operator_delta,
  presence_optional,
  734, // id
  "PrevSetPx", // name
  "", // ns
  nullptr,  // opContext
  decimal_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
MDSnapshotFullRefresh_4001__TotalLongPosition_instruction(
  operator_delta,
  presence_optional,
  8506, // id
  "TotalLongPosition", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

static uint32_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDFullGrp_length_instruction(
  operator_copy,
  presence_mandatory,
  268, // id
  "NoMDEntries", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>()); // initial_value

const static ascii_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryType_instruction(
  operator_none,
  presence_mandatory,
  269, // id
  "MDEntryType", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static decimal_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryPx_instruction(
  operator_delta,
  presence_optional,
  270, // id
  "MDEntryPx", // name
  "", // ns
  nullptr,  // opContext
  decimal_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint64_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntrySize_instruction(
  operator_delta,
  presence_optional,
  271, // id
  "MDEntrySize", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint64_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static ascii_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryTime_instruction(
  operator_default,
  presence_optional,
  273, // id
  "MDEntryTime", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static uint32_field_instruction
MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryPositionNo_instruction(
  operator_none,
  presence_optional,
  290, // id
  "MDEntryPositionNo", // name
  "", // ns
  nullptr,  // opContext
  int_value_storage<uint32_t>(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* MDSnapshotFullRefresh_4001__MDFullGrp_element__subinstructions[] = {
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryType_instruction,
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryPx_instruction,
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntrySize_instruction,
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryTime_instruction,
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDEntryPositionNo_instruction,
};

const static MDSnapshotFullRefresh_4001_cref::MDFullGrp_cref::instruction_type
MDSnapshotFullRefresh_4001__MDFullGrp_instruction(
  presence_mandatory,
  0, // id
  "MDFullGrp", // name
  "", // ns
  "", // dictionary
  MDSnapshotFullRefresh_4001__MDFullGrp_element__subinstructions,
  nullptr, // element_instruction
  nullptr, // ref_instruction
  &MDSnapshotFullRefresh_4001__MDFullGrp_element__MDFullGrp_length_instruction, // length
  "", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); //tag 

const static ascii_field_instruction
MDSnapshotFullRefresh_4001__TradingPhaseCode_instruction(
  operator_copy,
  presence_optional,
  8538, // id
  "TradingPhaseCode", // name
  "", // ns
  nullptr,  // opContext
  string_value_storage(), // initial_value
  mfast::instruction_tag(0)); // tag

const static field_instruction* MDSnapshotFullRefresh_4001__subinstructions[] = {
  &MDSnapshotFullRefresh_4001__MDStreamID_instruction,
  &MDSnapshotFullRefresh_4001__SecurityID_instruction,
  &MDSnapshotFullRefresh_4001__Symbol_instruction,
  &MDSnapshotFullRefresh_4001__NumTrades_instruction,
  &MDSnapshotFullRefresh_4001__TradeVolume_instruction,
  &MDSnapshotFullRefresh_4001__TotalValueTraded_instruction,
  &MDSnapshotFullRefresh_4001__PrevClosePx_instruction,
  &MDSnapshotFullRefresh_4001__PrevSetPx_instruction,
  &MDSnapshotFullRefresh_4001__TotalLongPosition_instruction,
  &MDSnapshotFullRefresh_4001__MDFullGrp_instruction,
  &MDSnapshotFullRefresh_4001__TradingPhaseCode_instruction,
};

  const static MDSnapshotFullRefresh_4001::instruction_type the_instruction(
    4001, // id
    "MDSnapshotFullRefresh_4001", // name
    "", // ns
    "", // templateNs
    "", // dictionary
    MDSnapshotFullRefresh_4001__subinstructions,
    0, // reset
  "MDSnapshotFullRefresh", // typeRef name 
  "", // typeRef ns 
  "", // cpp_ns
  mfast::instruction_tag(0)); // tag 

  ptr_instruction = &the_instruction;
  return ptr_instruction;
}

const template_instruction* SSE_MarketData_Templates_templates_instructions[] ={
  MDSnapshotFullRefresh_4001::instruction()};

templates_description::templates_description()
  : mfast::templates_description(
    "http://www.sse.com.cn/ns/STEP1.0.0", // ns
    "http://www.sse.com.cn/ns/templates/NGTS", // templateNs
    "", // dictionary
    SSE_MarketData_Templates_templates_instructions)
{
}

const templates_description* templates_description::instance()
{
  static const templates_description inst;
  return &inst;
}

}
