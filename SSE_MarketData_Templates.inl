// SSE_MarketData_Templates.inl generated by mFAST from FAST Template. 
// Do not modify this file directly. Any modifications 
// will be lost the next time this file is generated.

inline
MDSnapshotFullRefresh_4001_cref::MDSnapshotFullRefresh_4001_cref()
  : base_type(nullptr, nullptr)
{
}

template <typename T>inline
MDSnapshotFullRefresh_4001_cref::MDSnapshotFullRefresh_4001_cref(
  typename std::enable_if<std::is_same<typename T::cref_type, MDSnapshotFullRefresh_4001_cref>::value, const mfast::value_storage*>::type storage_array,
  const T* instruction)
  : base_type(storage_array, instruction)
{
}

inline
MDSnapshotFullRefresh_4001_cref::MDSnapshotFullRefresh_4001_cref(
  const mfast::message_cref& other)
  : base_type(other)
{
}

inline
MDSnapshotFullRefresh_4001_cref::MDSnapshotFullRefresh_4001_cref(
  const mfast::field_cref& other)
  : base_type(mfast::field_cref_core_access::storage_of(other)->of_group.content_,
              static_cast<instruction_cptr>(other.instruction()))
{
}

inline
MDSnapshotFullRefresh_4001_cref::operator mfast::message_cref()
{
  return mfast::message_cref(this->storage(), static_cast<instruction_cptr>(this->instruction()));
}

template <typename Visitor>
inline void MDSnapshotFullRefresh_4001_cref::accept(Visitor& visitor)
{
  using namespace mfast;
  visitor.visit(ext_cref<ascii_string_cref, copy_operator_tag, properties_type< 0> > ((*this)[0]) );
  visitor.visit(ext_cref<ascii_string_cref, tail_operator_tag, properties_type< 0> > ((*this)[1]) );
  visitor.visit(ext_cref<byte_vector_cref, default_operator_tag, properties_type< 1> > ((*this)[2]) );
  visitor.visit(ext_cref<uint64_cref, delta_operator_tag, properties_type< 1> > ((*this)[3]) );
  visitor.visit(ext_cref<uint64_cref, delta_operator_tag, properties_type< 1> > ((*this)[4]) );
  visitor.visit(ext_cref<decimal_cref, delta_operator_tag, properties_type< 1> > ((*this)[5]) );
  visitor.visit(ext_cref<decimal_cref, delta_operator_tag, properties_type< 1> > ((*this)[6]) );
  visitor.visit(ext_cref<decimal_cref, delta_operator_tag, properties_type< 1> > ((*this)[7]) );
  visitor.visit(ext_cref<uint64_cref, delta_operator_tag, properties_type< 1> > ((*this)[8]) );
  visitor.visit(ext_cref< sequence_cref, ext_cref<uint32_cref, copy_operator_tag, properties_type< 0> >, ext_cref< typename MDFullGrp_cref::reference, sequence_element_tag,properties_type< 2> > > ((*this)[9]) );
  visitor.visit(ext_cref<ascii_string_cref, copy_operator_tag, properties_type< 1> > ((*this)[10]) );
}

inline
MDSnapshotFullRefresh_4001_mref::MDSnapshotFullRefresh_4001_mref()
  : base_type(nullptr, nullptr, nullptr)
{
}

template <typename T>inline
MDSnapshotFullRefresh_4001_mref::MDSnapshotFullRefresh_4001_mref(
  mfast::allocator* alloc,
  typename std::enable_if<std::is_same<typename T::cref_type, MDSnapshotFullRefresh_4001_cref>::value, mfast::value_storage*>::type storage_array,
  const T*          instruction)
  : base_type(alloc, storage_array, instruction)
{
}

inline
MDSnapshotFullRefresh_4001_mref::MDSnapshotFullRefresh_4001_mref(
  const mfast::message_mref& other)
  : base_type(other)
{
}

inline
MDSnapshotFullRefresh_4001_mref::MDSnapshotFullRefresh_4001_mref(
  const mfast::field_mref_base& other)
  : base_type(other.allocator(),
              mfast::field_mref_core_access::storage_of(other)->of_group.content_,
              static_cast<instruction_cptr>(other.instruction()))
{
}

inline
MDSnapshotFullRefresh_4001_mref::operator mfast::message_mref()
{
  return mfast::message_mref(this->allocator(), const_cast<mfast::value_storage*>(this->storage()), static_cast<instruction_cptr>(this->instruction()));
}

template <typename Visitor>
inline void MDSnapshotFullRefresh_4001_mref::accept(Visitor& visitor)
{
  using namespace mfast;
  visitor.visit(ext_mref<ascii_string_mref, copy_operator_tag, properties_type< 0> > ((*this)[0]) );
  visitor.visit(ext_mref<ascii_string_mref, tail_operator_tag, properties_type< 0> > ((*this)[1]) );
  visitor.visit(ext_mref<byte_vector_mref, default_operator_tag, properties_type< 1> > ((*this)[2]) );
  visitor.visit(ext_mref<uint64_mref, delta_operator_tag, properties_type< 1> > ((*this)[3]) );
  visitor.visit(ext_mref<uint64_mref, delta_operator_tag, properties_type< 1> > ((*this)[4]) );
  visitor.visit(ext_mref<decimal_mref, delta_operator_tag, properties_type< 1> > ((*this)[5]) );
  visitor.visit(ext_mref<decimal_mref, delta_operator_tag, properties_type< 1> > ((*this)[6]) );
  visitor.visit(ext_mref<decimal_mref, delta_operator_tag, properties_type< 1> > ((*this)[7]) );
  visitor.visit(ext_mref<uint64_mref, delta_operator_tag, properties_type< 1> > ((*this)[8]) );
  visitor.visit(ext_mref< sequence_mref, ext_mref<uint32_mref, copy_operator_tag, properties_type< 0> >, ext_mref< typename MDFullGrp_mref::reference, sequence_element_tag,properties_type< 2> > > ((*this)[9]) );
  visitor.visit(ext_mref<ascii_string_mref, copy_operator_tag, properties_type< 1> > ((*this)[10]) );
}

inline
MDSnapshotFullRefresh_4001::MDSnapshotFullRefresh_4001(
  mfast::allocator* alloc)
  : base_type(alloc, instruction(), this->data())
{
}

inline
MDSnapshotFullRefresh_4001::MDSnapshotFullRefresh_4001(
  const MDSnapshotFullRefresh_4001_cref& other,
  mfast::allocator* alloc)
  : base_type(alloc, instruction(), this->data(), other.field_storage(0))
{
}

#ifdef MFAST_JSON_H
MDSnapshotFullRefresh_4001::MDSnapshotFullRefresh_4001(
  const char* json_initializer,
  int json_object_tag_mask,
  mfast::allocator* alloc)
  : base_type(alloc, instruction(), this->data())
{
  std::stringstream strm(json_initializer);
  mfast::json::decode(strm, this->mref(), json_object_tag_mask);
}

#endif
inline MDSnapshotFullRefresh_4001::cref_type
MDSnapshotFullRefresh_4001::ref() const
{
  return MDSnapshotFullRefresh_4001::cref_type(my_storage_.of_group.content_, instruction());
}

inline MDSnapshotFullRefresh_4001::cref_type
MDSnapshotFullRefresh_4001::cref() const
{
  return MDSnapshotFullRefresh_4001::cref_type(my_storage_.of_group.content_, instruction());
}

inline MDSnapshotFullRefresh_4001::mref_type
MDSnapshotFullRefresh_4001::ref()
{
  return MDSnapshotFullRefresh_4001::mref_type(alloc_, my_storage_.of_group.content_, instruction());
}

inline MDSnapshotFullRefresh_4001::mref_type
MDSnapshotFullRefresh_4001::mref()
{
  return MDSnapshotFullRefresh_4001::mref_type(alloc_, my_storage_.of_group.content_, instruction());
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::get_MDStreamID() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[0]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::try_get_MDStreamID() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[0]);
}

inline mfast::ascii_string_mref
MDSnapshotFullRefresh_4001_mref::set_MDStreamID() const
{
  return static_cast<mfast::ascii_string_mref>((*this)[0]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::get_SecurityID() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[1]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::try_get_SecurityID() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[1]);
}

inline mfast::ascii_string_mref
MDSnapshotFullRefresh_4001_mref::set_SecurityID() const
{
  return static_cast<mfast::ascii_string_mref>((*this)[1]);
}

inline mfast::byte_vector_cref
MDSnapshotFullRefresh_4001_cref::get_Symbol() const
{
  return static_cast<mfast::byte_vector_cref>((*this)[2]);
}

inline mfast::byte_vector_cref
MDSnapshotFullRefresh_4001_cref::try_get_Symbol() const
{
  if ((*this)[2].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::byte_vector_cref>((*this)[2]);
}

inline mfast::byte_vector_mref
MDSnapshotFullRefresh_4001_mref::set_Symbol() const
{
  return static_cast<mfast::byte_vector_mref>((*this)[2]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_Symbol() const
{
  (*this)[2].omit();
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::get_NumTrades() const
{
  return static_cast<mfast::uint64_cref>((*this)[3]);
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::try_get_NumTrades() const
{
  if ((*this)[3].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::uint64_cref>((*this)[3]);
}

inline mfast::uint64_mref
MDSnapshotFullRefresh_4001_mref::set_NumTrades() const
{
  return static_cast<mfast::uint64_mref>((*this)[3]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_NumTrades() const
{
  (*this)[3].omit();
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::get_TradeVolume() const
{
  return static_cast<mfast::uint64_cref>((*this)[4]);
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::try_get_TradeVolume() const
{
  if ((*this)[4].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::uint64_cref>((*this)[4]);
}

inline mfast::uint64_mref
MDSnapshotFullRefresh_4001_mref::set_TradeVolume() const
{
  return static_cast<mfast::uint64_mref>((*this)[4]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_TradeVolume() const
{
  (*this)[4].omit();
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::get_TotalValueTraded() const
{
  return static_cast<mfast::decimal_cref>((*this)[5]);
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::try_get_TotalValueTraded() const
{
  if ((*this)[5].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::decimal_cref>((*this)[5]);
}

inline mfast::decimal_mref
MDSnapshotFullRefresh_4001_mref::set_TotalValueTraded() const
{
  return static_cast<mfast::decimal_mref>((*this)[5]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_TotalValueTraded() const
{
  (*this)[5].omit();
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::get_PrevClosePx() const
{
  return static_cast<mfast::decimal_cref>((*this)[6]);
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::try_get_PrevClosePx() const
{
  if ((*this)[6].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::decimal_cref>((*this)[6]);
}

inline mfast::decimal_mref
MDSnapshotFullRefresh_4001_mref::set_PrevClosePx() const
{
  return static_cast<mfast::decimal_mref>((*this)[6]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_PrevClosePx() const
{
  (*this)[6].omit();
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::get_PrevSetPx() const
{
  return static_cast<mfast::decimal_cref>((*this)[7]);
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::try_get_PrevSetPx() const
{
  if ((*this)[7].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::decimal_cref>((*this)[7]);
}

inline mfast::decimal_mref
MDSnapshotFullRefresh_4001_mref::set_PrevSetPx() const
{
  return static_cast<mfast::decimal_mref>((*this)[7]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_PrevSetPx() const
{
  (*this)[7].omit();
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::get_TotalLongPosition() const
{
  return static_cast<mfast::uint64_cref>((*this)[8]);
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::try_get_TotalLongPosition() const
{
  if ((*this)[8].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::uint64_cref>((*this)[8]);
}

inline mfast::uint64_mref
MDSnapshotFullRefresh_4001_mref::set_TotalLongPosition() const
{
  return static_cast<mfast::uint64_mref>((*this)[8]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_TotalLongPosition() const
{
  (*this)[8].omit();
}

inline MDSnapshotFullRefresh_4001_cref::MDFullGrp_cref
MDSnapshotFullRefresh_4001_cref::get_MDFullGrp() const
{
  return static_cast<MDSnapshotFullRefresh_4001_cref::MDFullGrp_cref>((*this)[9]);
}

inline MDSnapshotFullRefresh_4001_cref::MDFullGrp_cref
MDSnapshotFullRefresh_4001_cref::try_get_MDFullGrp() const
{
  return static_cast<MDSnapshotFullRefresh_4001_cref::MDFullGrp_cref>((*this)[9]);
}

inline MDSnapshotFullRefresh_4001_mref::MDFullGrp_mref
MDSnapshotFullRefresh_4001_mref::set_MDFullGrp() const
{
  return static_cast<MDSnapshotFullRefresh_4001_mref::MDFullGrp_mref>((*this)[9]);
}

inline
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::MDFullGrp_element_cref(
  const mfast::value_storage*   storage,
  MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::instruction_cptr instruction)
  : base_type(storage, instruction)
{
}

inline
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::MDFullGrp_element_mref(
  mfast::allocator*               alloc,
  mfast::value_storage*         storage,
  MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::instruction_cptr instruction)
  : base_type(alloc,storage, instruction)
{
}

template <typename Visitor>
inline void MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::accept(Visitor& visitor)
{
  using namespace mfast;
  visitor.visit(ext_cref<ascii_string_cref, none_operator_tag, properties_type< 0> > ((*this)[0]) );
  visitor.visit(ext_cref<decimal_cref, delta_operator_tag, properties_type< 1> > ((*this)[1]) );
  visitor.visit(ext_cref<uint64_cref, delta_operator_tag, properties_type< 1> > ((*this)[2]) );
  visitor.visit(ext_cref<ascii_string_cref, default_operator_tag, properties_type< 1> > ((*this)[3]) );
  visitor.visit(ext_cref<uint32_cref, none_operator_tag, properties_type< 1> > ((*this)[4]) );
}

template <typename Visitor>
inline void MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::accept(Visitor& visitor)
{
  using namespace mfast;
  visitor.visit(ext_mref<ascii_string_mref, none_operator_tag, properties_type< 0> > ((*this)[0]) );
  visitor.visit(ext_mref<decimal_mref, delta_operator_tag, properties_type< 1> > ((*this)[1]) );
  visitor.visit(ext_mref<uint64_mref, delta_operator_tag, properties_type< 1> > ((*this)[2]) );
  visitor.visit(ext_mref<ascii_string_mref, default_operator_tag, properties_type< 1> > ((*this)[3]) );
  visitor.visit(ext_mref<uint32_mref, none_operator_tag, properties_type< 1> > ((*this)[4]) );
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::get_MDEntryType() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[0]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::try_get_MDEntryType() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[0]);
}

inline mfast::ascii_string_mref
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::set_MDEntryType() const
{
  return static_cast<mfast::ascii_string_mref>((*this)[0]);
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::get_MDEntryPx() const
{
  return static_cast<mfast::decimal_cref>((*this)[1]);
}

inline mfast::decimal_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::try_get_MDEntryPx() const
{
  if ((*this)[1].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::decimal_cref>((*this)[1]);
}

inline mfast::decimal_mref
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::set_MDEntryPx() const
{
  return static_cast<mfast::decimal_mref>((*this)[1]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::omit_MDEntryPx() const
{
  (*this)[1].omit();
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::get_MDEntrySize() const
{
  return static_cast<mfast::uint64_cref>((*this)[2]);
}

inline mfast::uint64_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::try_get_MDEntrySize() const
{
  if ((*this)[2].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::uint64_cref>((*this)[2]);
}

inline mfast::uint64_mref
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::set_MDEntrySize() const
{
  return static_cast<mfast::uint64_mref>((*this)[2]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::omit_MDEntrySize() const
{
  (*this)[2].omit();
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::get_MDEntryTime() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[3]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::try_get_MDEntryTime() const
{
  if ((*this)[3].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::ascii_string_cref>((*this)[3]);
}

inline mfast::ascii_string_mref
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::set_MDEntryTime() const
{
  return static_cast<mfast::ascii_string_mref>((*this)[3]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::omit_MDEntryTime() const
{
  (*this)[3].omit();
}

inline mfast::uint32_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::get_MDEntryPositionNo() const
{
  return static_cast<mfast::uint32_cref>((*this)[4]);
}

inline mfast::uint32_cref
MDSnapshotFullRefresh_4001_cref::MDFullGrp_element_cref::try_get_MDEntryPositionNo() const
{
  if ((*this)[4].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::uint32_cref>((*this)[4]);
}

inline mfast::uint32_mref
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::set_MDEntryPositionNo() const
{
  return static_cast<mfast::uint32_mref>((*this)[4]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::MDFullGrp_element_mref::omit_MDEntryPositionNo() const
{
  (*this)[4].omit();
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::get_TradingPhaseCode() const
{
  return static_cast<mfast::ascii_string_cref>((*this)[10]);
}

inline mfast::ascii_string_cref
MDSnapshotFullRefresh_4001_cref::try_get_TradingPhaseCode() const
{
  if ((*this)[10].absent())
    throw mfast::bad_optional_access();
  return static_cast<mfast::ascii_string_cref>((*this)[10]);
}

inline mfast::ascii_string_mref
MDSnapshotFullRefresh_4001_mref::set_TradingPhaseCode() const
{
  return static_cast<mfast::ascii_string_mref>((*this)[10]);
}

inline
void
MDSnapshotFullRefresh_4001_mref::omit_TradingPhaseCode() const
{
  (*this)[10].omit();
}

